CREATE DATABASE delicious_cake;


CREATE TABLE Roles (
    Id INT PRIMARY KEY AUTO_INCREMENT,
    Name VARCHAR(100) NOT NULL,
    DateCreated DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE Status (
    Id INT PRIMARY KEY AUTO_INCREMENT,
    StatusName TEXT NOT NULL,
    DateCreated DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE Customer (
    Id INT PRIMARY KEY AUTO_INCREMENT,
    Fullname VARCHAR(255) NOT NULL,
    Email VARCHAR(255) NOT NULL UNIQUE,
    Address TEXT,
    Phone VARCHAR(50),
    Password TEXT NOT NULL,
    DateCreated DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE Staff (
    Id INT PRIMARY KEY AUTO_INCREMENT,
    Fullname VARCHAR(255) NOT NULL,
    Email VARCHAR(255) NOT NULL UNIQUE,
    Phone VARCHAR(50),
    Password TEXT NOT NULL,
    RoleId INT NOT NULL,
    DateCreated DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (RoleId) REFERENCES Roles(Id) ON DELETE CASCADE
);

CREATE TABLE CustomerStatus (
    Id INT PRIMARY KEY AUTO_INCREMENT,
    CustomerId INT NOT NULL,
    StatusId INT NULL,
    DateCreated DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (CustomerId) REFERENCES Customer(Id) ON DELETE CASCADE,
    FOREIGN KEY (StatusId) REFERENCES Status(Id) ON DELETE CASCADE
);

CREATE TABLE StaffStatus (
    Id INT PRIMARY KEY AUTO_INCREMENT,
    StaffId INT NOT NULL,
    StatusId INT NULL,
    DateCreated DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (StaffId) REFERENCES Staff(Id) ON DELETE CASCADE,
    FOREIGN KEY (StatusId) REFERENCES Status(Id) ON DELETE CASCADE
);

CREATE TABLE Category (
    Id INT PRIMARY KEY AUTO_INCREMENT,
    Name VARCHAR(255) NOT NULL,
    DateCreated DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE Cakes (
    Id INT PRIMARY KEY AUTO_INCREMENT,
    Name VARCHAR(255) NOT NULL,
    CategoryId INT NOT NULL,
    ImagePath TEXT,
    Description TEXT,
    Price DOUBLE NOT NULL,
    DiscountPrice DOUBLE,
    StockCount INT NOT NULL,
    DateCreated DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (CategoryId) REFERENCES Category(Id) ON DELETE CASCADE
);

CREATE TABLE Orders (
    Id INT PRIMARY KEY AUTO_INCREMENT,
    CustomerId INT NOT NULL,
    Total DOUBLE NOT NULL,
    Tax DOUBLE NOT NULL,
    DateCreated DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (CustomerId) REFERENCES Customer(Id) ON DELETE CASCADE
);

CREATE TABLE OrderStatus (
    Id INT PRIMARY KEY AUTO_INCREMENT,
    OrderId INT NOT NULL,
    StatusId INT NULL,
    DateCreated DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (OrderId) REFERENCES Orders(Id) ON DELETE CASCADE,
    FOREIGN KEY (StatusId) REFERENCES Status(Id) ON DELETE CASCADE
);

CREATE TABLE OrderItems (
    Id INT PRIMARY KEY AUTO_INCREMENT,
    OrderId INT NOT NULL,
    ProductId INT NOT NULL,
    ProductType VARCHAR(30) NOT NULL,
    Price DOUBLE NOT NULL,
    Quantity INT NOT NULL,
    SubTotal DOUBLE NOT NULL,
    DateCreated DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (OrderId) REFERENCES Orders(Id) ON DELETE CASCADE,
    FOREIGN KEY (ProductId) REFERENCES Cakes(Id) ON DELETE CASCADE
);

CREATE TABLE Delivery (
    Id INT PRIMARY KEY AUTO_INCREMENT,
    OrderId INT NOT NULL,
    StatusId INT NULL,
    StaffId INT NULL,
    Location TEXT NOT NULL,
    DateCreated DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (OrderId) REFERENCES Orders(Id) ON DELETE CASCADE,
    FOREIGN KEY (StatusId) REFERENCES Status(Id) ON DELETE CASCADE,
    FOREIGN KEY (StaffId) REFERENCES Staff(Id) ON DELETE CASCADE
);

CREATE TABLE DeliveryStatus (
    Id INT PRIMARY KEY AUTO_INCREMENT,
    DeliveryId INT NOT NULL,
    StatusId INT NULL,
    DateCreated DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (DeliveryId) REFERENCES Delivery(Id) ON DELETE CASCADE,
    FOREIGN KEY (StatusId) REFERENCES Status(Id) ON DELETE CASCADE
);

CREATE TABLE PaymentMethod (
    Id INT PRIMARY KEY AUTO_INCREMENT,
    Name VARCHAR(255) NOT NULL,
    Description TEXT,
    DateCreated DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE Payment (
    Id INT PRIMARY KEY AUTO_INCREMENT,
    CustomerId INT NOT NULL,
    PaymentMethodId INT NOT NULL,
    Amount DOUBLE NOT NULL,
    TransactionId INT NOT NULL,
    OrderId INT NOT NULL,
    StatusId INT NULL,
    DateCreated DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (CustomerId) REFERENCES Customer(Id) ON DELETE CASCADE,
    FOREIGN KEY (OrderId) REFERENCES Orders(Id) ON DELETE CASCADE,
    FOREIGN KEY (PaymentMethodId) REFERENCES PaymentMethod(Id) ON DELETE CASCADE,
    FOREIGN KEY (StatusId) REFERENCES Status(Id) ON DELETE CASCADE
);

CREATE TABLE GiftBox (
    Id INT PRIMARY KEY AUTO_INCREMENT,
    CategoryId INT,
    Name VARCHAR(255) NOT NULL,
    Description TEXT NOT NULL,
    Price DOUBLE NOT NULL,
    MaxCakes INT NOT NULL,
    ImagePath TEXT,
    DateCreated DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (CategoryId) REFERENCES Category(Id) ON DELETE CASCADE
);

CREATE TABLE GiftBoxStatus (
    Id INT PRIMARY KEY AUTO_INCREMENT,
    GiftBoxId INT NOT NULL,
    StatusId INT NULL,
    DateCreated DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (GiftBoxId) REFERENCES GiftBox(Id) ON DELETE CASCADE,
    FOREIGN KEY (StatusId) REFERENCES Status(Id) ON DELETE CASCADE
);

CREATE TABLE CakeStatus (
    Id INT PRIMARY KEY AUTO_INCREMENT,
    CakeId INT NOT NULL,
    StatusId INT NULL,
    DateCreated DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (CakeId) REFERENCES Cakes(Id) ON DELETE CASCADE,
    FOREIGN KEY (StatusId) REFERENCES Status(Id) ON DELETE CASCADE
);

CREATE TABLE GiftBoxSelection (
    Id INT PRIMARY KEY AUTO_INCREMENT,
    OrderId INT NOT NULL,
    GiftBoxId INT NOT NULL,
    CustomerId INT NOT NULL,
    DateCreated DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (OrderId) REFERENCES Orders(Id) ON DELETE CASCADE,
    FOREIGN KEY (GiftBoxId) REFERENCES GiftBox(Id) ON DELETE CASCADE,
    FOREIGN KEY (CustomerId) REFERENCES Customer(Id) ON DELETE CASCADE
);

CREATE TABLE GiftBoxSelectionCakes (
    Id INT PRIMARY KEY AUTO_INCREMENT,
    GiftBoxSelectionId INT NOT NULL,
    CakeId INT NOT NULL,
    DateCreated DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (GiftBoxSelectionId) REFERENCES GiftBoxSelection(Id) ON DELETE CASCADE,
    FOREIGN KEY (CakeId) REFERENCES Cakes(Id) ON DELETE CASCADE
);


INSERT INTO `status`(`StatusName`, `DateCreated`) VALUES ('ACTIVE',NOW());
INSERT INTO `status`(`StatusName`,`DateCreated`) VALUES ('INACTIVE',NOW());
INSERT INTO `status`(`StatusName`, `DateCreated`) VALUES ('IN PROGRESS',NOW());